{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","class","onClick","togglemode","for","Textform","useState","text","setText","text1","setText1","heading","value","rows","onChange","event","target","newtext","toUpperCase","toLowerCase","replace","trim","split","length","Alert","alert","role","msg","App","setmode","setalert","document","about","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7b497e69.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar- ${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n  \r\n          </ul>\r\n          <div class=\"form-check form-switch\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.togglemode}\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className={`form-check-label bg-${props.mode} `}\r\n              for=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React,{useState} from \"react\";\r\nexport default function Textform(props) {\r\n    const [text,setText]= useState(\"\")\r\n    const [text1,setText1]= useState(\"\")\r\n    const handleClick=()=>{\r\n\r\n        let newtext= text.toUpperCase();\r\n        setText(newtext)\r\n        \r\n    }\r\n    const LowerClick=()=>{\r\n\r\n        let newtext= text.toLowerCase();\r\n        setText(newtext)\r\n        \r\n    }\r\n    const clearClick=()=>{\r\n\r\n        let newtext= text.toLowerCase();\r\n        setText(newtext)\r\n        setText(\"\")\r\n        setText1(\"\")\r\n    }\r\n    const removeextraspace=()=>{\r\n\r\n        let newtext= text.replace(/\\s+/g, ' ').trim();\r\n        setText(newtext)\r\n        \r\n    }\r\n    const handlechange=(event)=>{\r\n\r\n        setText1(\"Typing\")\r\n        setText(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n    <div>\r\n      <div className=\"mb-3\"></div>\r\n      <div className={`mb-3 bg-${props.mode}`}>\r\n        <h1 className=\"hi\">{props.heading}-{text1}</h1>\r\n        <textarea\r\n          className={`form-control bg-${props.mode} text-${props.mode=='light'?'dark':'light'}`}\r\n          id=\"exampleFormControlTextarea1\"\r\n          value={text}\r\n          rows=\"8\"\r\n          onChange={handlechange}\r\n        ></textarea>\r\n      </div>\r\n      <div className={`container bg-${props.mode}`}>\r\n      <button   onClick={handleClick} className=\"btn btn-primary\">Uppercase</button>\r\n      <button onClick={LowerClick} className=\"btn btn-primary mx-3\">Lowercase</button>\r\n      <button onClick={removeextraspace} className=\"btn btn-primary mx-1\">Remove Extra Space</button>\r\n      <button onClick={clearClick} className=\"btn btn-primary mx-1 \">Clear</button>\r\n      <button onClick={props.togglemode} className=\"btn btn-primary mx-1 \">Dark Mode</button>\r\n      </div>\r\n    </div>\r\n    <div className=\"container my-3\">\r\n        <h2 className=\"hi\">Your Text Summary</h2>\r\n        <p>Words {text.split(\" \").length -1}, characters {text.length}</p>\r\n        <p >Time to read{0.0008*(text.split(\" \").length-1)}Minutes</p>\r\n        <h3>Preview</h3>\r\n      {text}\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    \r\n      props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\"\r\n        >\r\n          {props.alert.msg}\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          ></button>\r\n        </div>\r\n  \r\n  );\r\n}\r\n","import \"./App.css\";\nimport React, { useState } from 'react'\n\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar.js\";\nimport Textform from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState('light')\n  const [alert, setalert] = useState(null)\n  const showalert=(message,type)=>{\n    \n    setalert({\n      msg:message,\n      type:type\n    })\n  }\n  const togglemode=()=>{\n    if (mode==\"light\") {\n      setmode('dark')\n      showalert(\"Dark Mode Enabled\",\"sucess\")\n      \n      document.title=\"Text Ttuils -Dark Mode Enabled\"\n      \n    }\n    else{\n      setmode('light')\n      document.title=\"Text Ttuils \"\n    }\n  }\n\n  return (\n    <>\n   \n      <Navbar title=\"Texttutils\" about={\"About\"} mode={mode} togglemode={togglemode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n   \n        \n  \n            \n      <Textform heading=\"Enter Your Text to analyze\" mode={mode} togglemode={togglemode}/>\n        \n    \n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}